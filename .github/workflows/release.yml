name: Release
on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  DEVELOPMENT_BRANCH: dev

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_major_version: ${{ steps.semantic.outputs.new_release_major_version }}
      new_release_git_tag: ${{ steps.semantic.outputs.new_release_git_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm clean-install
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Build
        run: npm run build
      - name: Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
          extra_plugins: |
            @semantic-release/changelog@6.0.0
            @semantic-release/git@10.0.0
            conventional-changelog-conventionalcommits@4.6.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # rebase:
  #   name: Rebase
  #   if: ${{ github.ref == 'refs/heads/main' && needs.release.outputs.new_release_published == 'true' }}
  #   needs: release
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   permissions:
  #     contents: write # to be able to publish a GitHub release
  #     issues: write # to be able to comment on released issues
  #     pull-requests: write # to be able to comment on released pull requests
  #     id-token: write # to enable use of OIDC for npm provenance
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Rebase
  #       run: |
  #         git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
  #         git config --global user.name "@$GITHUB_ACTOR"
  #         git status
  #         set -o xtrace
  #         git fetch origin main
  #         git pull
  #         git fetch origin $DEVELOPMENT_BRANCH
  #         git checkout -b origin/$DEVELOPMENT_BRANCH
  #         git rebase origin/main
  #         git push origin origin/$DEVELOPMENT_BRANCH:$DEVELOPMENT_BRANCH
